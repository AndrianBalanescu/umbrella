{
    "name": "@thi.ng/parse",
    "version": "2.1.5",
    "description": "Purely functional parser combinators & AST generation for generic inputs",
    "type": "module",
    "module": "./index.js",
    "typings": "./index.d.ts",
    "sideEffects": false,
    "repository": {
        "type": "git",
        "url": "https://github.com/thi-ng/umbrella.git"
    },
    "homepage": "https://github.com/thi-ng/umbrella/tree/develop/packages/parse#readme",
    "funding": [
        {
            "type": "github",
            "url": "https://github.com/sponsors/postspectacular"
        },
        {
            "type": "patreon",
            "url": "https://patreon.com/thing_umbrella"
        }
    ],
    "author": "Karsten Schmidt <k+npm@thi.ng>",
    "license": "Apache-2.0",
    "scripts": {
        "build": "yarn clean && tsc --declaration",
        "clean": "rimraf '*.js' '*.d.ts' '*.map' doc combinators presets prims readers xform",
        "doc": "typedoc --excludePrivate --excludeInternal --out doc src/index.ts",
        "doc:ae": "mkdir -p .ae/doc .ae/temp && api-extractor run --local --verbose",
        "doc:readme": "yarn doc:stats && tools:readme",
        "doc:stats": "tools:module-stats",
        "pub": "yarn npm publish --access public",
        "test": "testament test"
    },
    "dependencies": {
        "@thi.ng/api": "^8.3.4",
        "@thi.ng/checks": "^3.1.4",
        "@thi.ng/defmulti": "^2.1.4",
        "@thi.ng/errors": "^2.1.4",
        "@thi.ng/strings": "^3.3.2"
    },
    "devDependencies": {
        "@microsoft/api-extractor": "^7.19.4",
        "@thi.ng/testament": "^0.2.4",
        "rimraf": "^3.0.2",
        "tools": "workspace:^",
        "typedoc": "^0.22.13",
        "typescript": "^4.6.2"
    },
    "keywords": [
        "ast",
        "combinator",
        "compiler",
        "composition",
        "datastructure",
        "dsl",
        "functional",
        "grammar",
        "parser",
        "peg",
        "recursive",
        "regexp",
        "tree",
        "typescript"
    ],
    "publishConfig": {
        "access": "public"
    },
    "engines": {
        "node": ">=12.7"
    },
    "files": [
        "*.js",
        "*.d.ts",
        "combinators",
        "presets",
        "prims",
        "readers",
        "xform"
    ],
    "exports": {
        ".": {
            "import": "./index.js"
        },
        "./api": {
            "import": "./api.js"
        },
        "./combinators/alt": {
            "import": "./combinators/alt.js"
        },
        "./combinators/boundary": {
            "import": "./combinators/boundary.js"
        },
        "./combinators/check": {
            "import": "./combinators/check.js"
        },
        "./combinators/dynamic": {
            "import": "./combinators/dynamic.js"
        },
        "./combinators/expect": {
            "import": "./combinators/expect.js"
        },
        "./combinators/lookahead": {
            "import": "./combinators/lookahead.js"
        },
        "./combinators/maybe": {
            "import": "./combinators/maybe.js"
        },
        "./combinators/not": {
            "import": "./combinators/not.js"
        },
        "./combinators/repeat": {
            "import": "./combinators/repeat.js"
        },
        "./combinators/seq": {
            "import": "./combinators/seq.js"
        },
        "./combinators/wrap": {
            "import": "./combinators/wrap.js"
        },
        "./combinators/xform": {
            "import": "./combinators/xform.js"
        },
        "./context": {
            "import": "./context.js"
        },
        "./error": {
            "import": "./error.js"
        },
        "./grammar": {
            "import": "./grammar.js"
        },
        "./presets/alpha": {
            "import": "./presets/alpha.js"
        },
        "./presets/bits": {
            "import": "./presets/bits.js"
        },
        "./presets/digits": {
            "import": "./presets/digits.js"
        },
        "./presets/escape": {
            "import": "./presets/escape.js"
        },
        "./presets/hex": {
            "import": "./presets/hex.js"
        },
        "./presets/numbers": {
            "import": "./presets/numbers.js"
        },
        "./presets/string": {
            "import": "./presets/string.js"
        },
        "./presets/whitespace": {
            "import": "./presets/whitespace.js"
        },
        "./prims/always": {
            "import": "./prims/always.js"
        },
        "./prims/anchor": {
            "import": "./prims/anchor.js"
        },
        "./prims/fail": {
            "import": "./prims/fail.js"
        },
        "./prims/lit": {
            "import": "./prims/lit.js"
        },
        "./prims/none-of": {
            "import": "./prims/none-of.js"
        },
        "./prims/one-of": {
            "import": "./prims/one-of.js"
        },
        "./prims/pass": {
            "import": "./prims/pass.js"
        },
        "./prims/range": {
            "import": "./prims/range.js"
        },
        "./prims/satisfy": {
            "import": "./prims/satisfy.js"
        },
        "./prims/skip": {
            "import": "./prims/skip.js"
        },
        "./prims/string": {
            "import": "./prims/string.js"
        },
        "./readers/array-reader": {
            "import": "./readers/array-reader.js"
        },
        "./readers/string-reader": {
            "import": "./readers/string-reader.js"
        },
        "./xform/collect": {
            "import": "./xform/collect.js"
        },
        "./xform/comp": {
            "import": "./xform/comp.js"
        },
        "./xform/count": {
            "import": "./xform/count.js"
        },
        "./xform/discard": {
            "import": "./xform/discard.js"
        },
        "./xform/hoist": {
            "import": "./xform/hoist.js"
        },
        "./xform/join": {
            "import": "./xform/join.js"
        },
        "./xform/nest": {
            "import": "./xform/nest.js"
        },
        "./xform/number": {
            "import": "./xform/number.js"
        },
        "./xform/print": {
            "import": "./xform/print.js"
        },
        "./xform/replace": {
            "import": "./xform/replace.js"
        },
        "./xform/trim": {
            "import": "./xform/trim.js"
        },
        "./xform/with-id": {
            "import": "./xform/with-id.js"
        }
    },
    "thi.ng": {
        "related": [
            "fsm",
            "transducers-fsm"
        ],
        "year": 2020
    }
}
